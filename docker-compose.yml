version: '3.9'

services:
  api:
    build:
      context: ./services/api
      dockerfile: Dockerfile
    container_name: nba-stats-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=nba_stats
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - LOG_LEVEL=debug
    depends_on:
      - postgres
    volumes:
      - ./services/api:/app
      - /app/node_modules
    networks:
      - nba-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    labels:
      - "com.example.monitoring=true"
      - "com.example.service=nba-stats-api"
      - "com.example.version=1.0.0"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nba-stats-frontend
    ports:
      - "3001:3001"
    environment:
      - REACT_APP_API_URL=http://localhost:3000/api
    depends_on:
      - api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - nba-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  postgres:
    image: postgres:15-alpine
    container_name: nba-stats-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=nba_stats
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nba-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: nba-stats-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@nba-stats.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_JSON_FILE='/pgadmin4/servers.json'
      - PGADMIN_CONFIG_ENHANCED_IAM_LOGGING=False
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - ./services/pgadmin/servers.json:/pgadmin4/servers.json
    networks:
      - nba-network

volumes:
  postgres_data:

networks:
  nba-network:
    driver: bridge
